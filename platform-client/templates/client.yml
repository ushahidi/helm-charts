---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: platform
    service: client
  name: client

spec:
  minReadySeconds: 5
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: platform
      service: client
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: platform
        service: client
    spec:
      containers:
      - livenessProbe:
          httpGet:
            path: /api/v3/config
            port: 8080
        env:
        - name: BACKEND_URL
          value: {{ .Values.backend_url }}
        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        name: api
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: {{ .Values.limits.cpu }}
            memory: {{ .Values.limits.memory }}
          requests:
            cpu: {{ .Values.requests.cpu }}
            memory: {{ .Values.requests.memory }}
      terminationGracePeriodSeconds: 15

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: platform
    service: client
  name: client
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: platform
    service: client

{{- if .Values.ingress.enabled }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
{{- if .Values.ingress.annotations }}
  annotations:
{{ toYaml .Values.ingress.annotations | indent 4 }}
{{- end }}
  name: client
spec:
  rules:
  - host: {{ .Values.ingress.host | quote }}
    http:
      paths:
      - path: /
        backend:
          serviceName: client
          servicePort: http
{{- if .Values.ingress.tls }}
  tls:
{{ toYaml .Values.ingress.tls | indent 4 }}
{{- end -}}
{{- end }}
