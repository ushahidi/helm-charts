minReadySeconds: 10
progressDeadlineSeconds: 600

image:
  repository: ushahidi
  name: platform
  tag: latest

config:
  appenv: staging
  timezone: UTC
  hdx_url: https://data.humdata.org/

  # appkey:
  # appkey_secret:
  #   name:
  #   key:
  
  # -- used for "signature authentication"
  # shared_secret:
  # shared_secret_ref:
  #   name:
  #   key:

  # ush_analytics_prefix:

  ## this is mostly a placeholder for now, all that enabling multisite
  ## does is disabling the database migrations
  ## it also disables liveness checks since we don't have a proper endpoint
  ## that is independent of the backend finding the deployment
  multisite:
    enabled: false
    # domain:
    # api_domain:
    # email:
  ##
  db:
    host: mysql
    port: 3306
    database: ushahidi
    username: ushahidi
    password: ushahidi
    # password_secret:
    #   name:
    #   key:
  redis:
    host: redis
    port: 6379
  memcached:
    host: memcached
    port: 11211
  drivers:
    cache: redis
    ratelimiter_cache: redis
    queue: redis
    # filesystem: local
    # mail: log     # -> e-mail disabled by default
  mail_from:
    address: admin@example.com
    name: "Platform Deployment Admin"
  # smtp_mail:
  #   host:
  #   port: 587
  #   encryption: tls
  #   username:
  #   password
  #   password_secret:
  #     name:
  #     key:
  # mailgun_mail:
  #   domain:
  #   secret:
  #   secret_ref:
  #     name:
  #     key:
  #
  # rackspace_filesystem:
  #   region:
  #   container:
  #   username:
  #   apikey:
  #   apikey_secret:
  #     name:
  #     key:
  # TODO
  # s3_filesystem:
  #   endpoint:
  #   region:
  #   bucket:
  #   access_key_id:
  #   access_key_id_secret:
  #     name:
  #     key:
  #   secret_access_key:
  #   secret_access_key_secret:
  #     name:
  #     key:

  sentry:
    dsn:
    # environment:

  ##
  ## Additional settings provided in .env file, note that this only works for
  ## versions after commit
  ## https://github.com/ushahidi/platform/pull/3986/commits/2e03a09e3e8c4731b2f0ad3298806363c6d076d8
  # dotenv: ""
  ## Same as above, but coming from a secret
  # dotenv_secret:
  #   name:
  #   key:
  ## Secret containing keys oauth-public.key and oauth-private.key for passport
  # passport_keys_secret:

api:
  replicas: 1
  debug: "False"
  params:
    php_exec_time_limit: 60
    phpfpm_pm_max_children: 5
    phpfpm_pm_start_servers: 2
    phpfpm_pm_min_spare_servers: 1
    phpfpm_pm_max_spare_servers: 3
    phpfpm_pm_process_idle_timeout: "10s"
    phpfpm_pm_max_requests: 500
    upload_max_filesize: 2m     # this should match the value below with units
    image_max_size: '2000000'   # this should match the previous value but in bytes
  limits:
    cpu: "1"
    memory: "1Gi"
  requests:
    cpu: "10m"
    memory: "64Mi"
  startupProbe:
    initialDelaySeconds: 5
    periodSeconds: 1
    failureThreshold: 300
  livenessProbe:
    initialDelaySeconds: 0
    periodSeconds: 5
    failureThreshold: 1
  # deployment:
  #   annotations:
  ingress:
    enabled: false
    # annotations:
    # tls:
    # - secretName: domain.example.com
    #   hosts:
    #   - domain.example.com
    host: # domain.example.com
    # aliases:
    #   -

worker:
  replicas: 1
  debug: "False"
  limits:
    cpu: "1"
    memory: "1Gi"
  requests:
    cpu: "10m"
    memory: "64Mi"
  # deployment:
  #   annotations:

crond:
  ### replicas: 1  --> this is not observed, there must always be just 1 crond
  debug: "False"
  limits:
    cpu: "1"
    memory: "1Gi"
  requests:
    cpu: "10m"
    memory: "64Mi"
  # deployment:
  #   annotations:

# This provides a compatible mysql server, with EPHEMERAL storage.
# Don't rely on it for production.
mysql:
  ## Set to false to disable
  enabled: true
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 8Gi
    # storageClass:
    # existingClaim:
    annotations: {}
    labels: {}
  limits:
    cpu: "1"
    memory: "1Gi"
  requests:
    cpu: "10m"
    memory: "64Mi"

# This provides a compatible redis server, with EPHEMERAL storage.
# Don't rely on it for production.
redis:
  ## Set to false to disable
  enabled: true
  limits:
    cpu: "1"
    memory: "1Gi"
  requests:
    cpu: "10m"
    memory: "64Mi"

# This provides a compatible memcached server
memcached:
  ## Set to true to enable
  enabled: false
  limits:
    cpu: "1"
    memory: "128Mi"
  requests:
    cpu: "10m"
    memory: "128Mi"
