{{- if .Values.mysql.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: platform
    service: mysql
  {{- if .Values.mysql.persistence.enabled }}
  name: mysql
  {{- else }}
  name: mysql-ephemeral
  {{- end }}

spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: platform
      service: mysql
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: platform
        service: mysql
    spec:
      {{- if .Values.mysql.persistence.enabled }}
      initContainers:
      - name: "remove-lost-found"
        image: "busybox:1"
        imagePullPolicy: Always
        resources:
          requests:
            memory: 10Mi
            cpu: 10m
        command:  ["rm", "-fr", "/var/lib/mysql/lost+found"]
        volumeMounts:
        - mountPath: "/var/lib/mysql"
          name: storage
      {{- end }}
      containers:
      - command:
        - docker-entrypoint.sh
        - --character-set-server=utf8mb4
        - --collation-server=utf8mb4_unicode_ci
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: ushahidi
        - name: MYSQL_USER
          value: ushahidi
        - name: MYSQL_PASSWORD
          value: ushahidi
        {{- with .Values.mysql.image }}
        image: {{ empty .repository | ternary "" (print .repository "/") }}{{ .name }}:{{ .tag }}
        {{- end }}
        imagePullPolicy: Always
        name: mysql
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        resources:
          limits:
            cpu: {{ .Values.mysql.limits.cpu }}
            memory: {{ .Values.mysql.limits.memory }}
          requests:
            cpu: {{ .Values.mysql.requests.cpu }}
            memory: {{ .Values.mysql.requests.memory }}
        {{- if .Values.mysql.persistence.enabled }}
        volumeMounts:
        - mountPath: "/var/lib/mysql"
          name: storage
        {{- end }}
      terminationGracePeriodSeconds: 5
      {{- if .Values.mysql.persistence.enabled }}
      volumes:
      - name: storage
        persistentVolumeClaim:
          {{- if .Values.mysql.persistence.existingClaim }}
          claimName: {{ .Values.mysql.persistence.existingClaim }}
          {{- else }}
          claimName: {{ .Release.Namespace }}-mysql-storage
          {{- end -}}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: platform
    service: mysql
  name: mysql
spec:
  ports:
  - name: mysql
    port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: platform
    service: mysql
  type: ClusterIP


{{ if and .Values.mysql.persistence.enabled (not .Values.mysql.persistence.existingClaim) -}}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Release.Namespace }}-mysql-storage
{{- with .Values.mysql.persistence.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.mysql.persistence.labels }}
  labels:
{{ toYaml .| indent 4 }}
{{- end }}
spec:
  accessModes:
    - {{ .Values.mysql.persistence.accessMode | quote }}
{{- if .Values.mysql.persistence.volumeName }}
  volumeName: {{ .Values.mysql.persistence.volumeName | quote }}
{{- end }}
  resources:
    requests:
      storage: {{ .Values.mysql.persistence.size | quote }}
{{- if .Values.mysql.persistence.storageClass }}
  {{- if (eq "-" .Values.mysql.persistence.storageClass) }}
  storageClassName: ""
  {{- else }}
  storageClassName: {{ .Values.mysql.persistence.storageClass | quote }}
  {{- end }}
{{- end }}
{{- end -}}
{{- end -}}
