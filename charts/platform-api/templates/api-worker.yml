{{- if .Values.config.dotenv }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dotenv
data:
  .env: |-
{{ .Values.config.dotenv | indent 4 }}
{{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
{{- if hasKey .Values.api "deployment" }}
{{- if .Values.api.deployment.annotations }}
  annotations:
{{ toYaml .Values.api.deployment.annotations | indent 4 }}
{{- else }}
  annotations: {}
{{- end }}
{{- end }}
  labels:
    app: platform
    service: api
  name: api

spec:
  minReadySeconds: {{ .Values.minReadySeconds }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app: platform
      service: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: platform
        service: api
    spec:
      containers:
      - command:
        - /bin/bash
        - /entrypoint.CES.sh
        - start
        {{- if not (.Values.config.multisite.enabled | default false) }}
        startupProbe:
          initialDelaySeconds: {{ .Values.api.startupProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.api.startupProbe.periodSeconds }}
          failureThreshold: {{ .Values.api.startupProbe.failureThreshold }}
          httpGet:
            path: /api/v3/config
            port: 8080
        livenessProbe:
          initialDelaySeconds: {{ .Values.api.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.api.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.api.livenessProbe.failureThreshold }}
          httpGet:
            path: /api/v3/config
            port: 8080
        {{- end }}
        env:
        - name: APP_ENV
          value: {{ .Values.config.appenv | quote }}
        - name: APP_KEY
          {{- if .Values.config.appkey }}
          value: {{ .Values.config.appkey | quote }}
          {{ else if .Values.config.appkey_secret }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.appkey_secret.name }}
              key: {{ .Values.config.appkey_secret.key }}
          {{ else }}
          value: {{ randAlphaNum 32 | quote }}
          {{- end }}
        - name: APP_DEBUG
          value: {{ .Values.api.debug | quote }}
        - name: APP_TIMEZONE
          value: {{ .Values.config.timezone }}
        - name: DB_CONNECTION
          value: mysql
        - name: DB_HOST
          value: {{ .Values.config.db.host }}
        - name: DB_PORT
          value: {{ .Values.config.db.port | quote }}
        - name: DB_DATABASE
          value: {{ .Values.config.db.database }}
        - name: DB_USERNAME
          value: {{ .Values.config.db.username }}
        - name: DB_PASSWORD
          {{- if .Values.config.db.password_secret }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.db.password_secret.name }}
              key: {{ .Values.config.db.password_secret.key }}
          {{- else }}
          value: {{ .Values.config.db.password | quote }}
          {{- end }}
        - name: HDX_URL
          value: {{ .Values.config.hdx_url | quote }}
        - name: MAIL_ADDRESS
          value: {{ .Values.config.mail_from.address | quote }}
        - name: MAIL_NAME
          value: {{ .Values.config.mail_from.name | quote }}
        {{- if .Values.config.smtp_mail }}
        - name: MAIL_DRIVER
          value: smtp
        - name: MAIL_HOST
          value: {{ .Values.config.smtp_mail.host | quote }}
        - name: MAIL_PORT
          value: {{ .Values.config.smtp_mail.port | default "587" | quote }}
        - name: MAIL_ENCRYPTION
          value: {{ .Values.config.smtp_mail.encryption | default "tls" | quote }}
        {{- if .Values.config.smtp_mail.username }}
        - name: MAIL_USERNAME
          value: {{ .Values.config.smtp_mail.username | quote }}
        {{- end }}
        {{- if .Values.config.smtp_mail.password }}
        - name: MAIL_PASSWORD
          value: {{ .Values.config.smtp_mail.password | quote }}
        {{- end }}
        {{- if .Values.config.smtp_mail.password_secret }}
        - name: MAIL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.smtp_mail.password_secret.name }}
              key: {{ .Values.config.smtp_mail.password_secret.key }}
        {{- end }}
        {{- end }}
        {{- if .Values.config.mailgun_mail }}
        - name: MAIL_DRIVER
          value: mailgun
        - name: MAILGUN_DOMAIN
          value: {{ .Values.config.mailgun_mail.domain | quote }}
        {{- if .Values.config.mailgun_mail.secret }}
        - name: MAILGUN_SECRET
          value: {{ .Values.config.mailgun_mail.secret | quote }}
        {{- end }}
        {{- if .Values.config.mailgun_mail.secret_ref }}
        - name: MAILGUN_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.mailgun_mail.secret_ref.name }}
              key: {{ .Values.config.mailgun_mail.secret_ref.key }}
        {{- end }}
        {{- end }}
        - name: REDIS_HOST
          value: {{ .Values.config.redis.host }}
        - name: REDIS_PORT
          value: {{ .Values.config.redis.port | quote }}
        - name: MEMCACHED_HOST
          value: {{ .Values.config.memcached.host | quote }}
        - name: MEMCACHED_PORT
          value: {{ .Values.config.memcached.port | quote }}
        - name: CACHE_DRIVER
          value: {{ .Values.config.drivers.cache }}
        - name: QUEUE_DRIVER
          value: {{ .Values.config.drivers.queue }}
        - name: RATELIMITER_CACHE
          value: {{ .Values.config.drivers.ratelimiter_cache }}
        - { name: DOCKERIZE_TIMEOUT, value: 180s }
        - name: DOCKERIZE_WAIT_FOR_mysql
          value: "tcp://{{ .Values.config.db.host }}:{{ .Values.config.db.port }}"
        - name: DOCKERIZE_WAIT_FOR_redis
          value: "tcp://{{ .Values.config.redis.host }}:{{ .Values.config.redis.port }}"
        - name: PHP_EXEC_TIME_LIMIT
          value: {{ .Values.api.params.php_exec_time_limit | quote }}
        - name: PHPFPM_PM_MAX_CHILDREN
          value: {{ .Values.api.params.phpfpm_pm_max_children | quote }}
        - name: PHPFPM_PM_START_SERVERS
          value: {{ .Values.api.params.phpfpm_pm_start_servers | quote }}
        - name: PHPFPM_PM_MIN_SPARE_SERVERS
          value: {{ .Values.api.params.phpfpm_pm_min_spare_servers | quote }}
        - name: PHPFPM_PM_MAX_SPARE_SERVERS
          value: {{ .Values.api.params.phpfpm_pm_max_spare_servers | quote }}
        - name: PHPFPM_PM_PROCESS_IDLE_TIMEOUT
          value: {{ .Values.api.params.phpfpm_pm_process_idle_timeout | quote }}
        - name: PHPFPM_PM_MAX_REQUESTS
          value: {{ .Values.api.params.phpfpm_pm_max_requests | quote }}
        - name: PHP_UPLOAD_MAX_FILESIZE
          value: {{ .Values.api.params.upload_max_filesize | quote }}
        - name: PHP_POST_MAX_SIZE
          value: {{ .Values.api.params.upload_max_filesize | quote }}
        - name: IMAGE_MAX_SIZE
          value: {{ .Values.api.params.media_max_upload | quote }}
        {{- if .Values.config.shared_secret }}
        - name: PLATFORM_SHARED_SECRET
          value: {{ .Values.config.shared_secret | quote }}
        {{- end }}
        {{- if .Values.config.shared_secret_ref }}
        - name: PLATFORM_SHARED_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.shared_secret_ref.name }}
              key: {{ .Values.config.shared_secret_ref.key }}
        {{- end }}
        {{- if .Values.config.rackspace_filesystem }}
        - name: FILESYSTEM_DRIVER
          value: rackspace
        - name: RS_REGION
          value: {{ .Values.config.rackspace_filesystem.region | quote }}
        - name: RS_CONTAINER
          value: {{ .Values.config.rackspace_filesystem.container | quote }}
        - name: RS_USERNAME
          value: {{ .Values.config.rackspace_filesystem.username | quote }}
        {{- if .Values.config.rackspace_filesystem.apikey }}
        - name: RS_APIKEY
          value: {{ .Values.config.rackspace_filesystem.apikey | quote }}
        {{- end }}
        {{- if .Values.config.rackspace_filesystem.apikey_secret }}
        - name: RS_APIKEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.rackspace_filesystem.apikey_secret.name }}
              key: {{ .Values.config.rackspace_filesystem.apikey_secret.key }}
        {{- end }}
        {{- end }}
        {{- if .Values.config.sentry.dsn }}
        - name: SENTRY_DSN
          value: {{ .Values.config.sentry.dsn | quote }}
        - name: SENTRY_ENVIRONMENT
        {{- if .Values.config.sentry.environment }}
          value: {{ .Values.config.sentry.environment | quote }}
        {{- else }}
          value: {{ .Values.config.appenv | quote }}
        {{- end }}
        {{- end }}
        # {{- if .Values.config.s3_filesystem }}
        # {{- end }}
        - { name: ENABLE_NGINX, value: "true" }
        - { name: ENABLE_PHPFPM, value: "true" }
        - { name: ENABLE_PLATFORM_TASKS, value: "false" }
        - { name: ENABLE_QUEUE_LISTEN, value: "false" }
        {{- if not (.Values.config.multisite.enabled | default false) }}
        - { name: DB_MIGRATIONS_HANDLED, value: "true" }
        {{- else }}
        - { name: DB_MIGRATIONS_HANDLED, value: "false" }
        {{- end }}
        - { name: RUN_PLATFORM_MIGRATIONS, value: "true" }
        {{- if or (.Values.config.dotenv) (.Values.config.dotenv_secret) }}
        - { name: DOTENV_PATH, value: "/var/www/.cfg/dotenv/.env" }
        {{- end }}
        {{- if .Values.config.passport_keys_secret }}
        - { name: PASSPORT_KEYS_PATH, value: "/var/www/.cfg/passport" }
        {{- end }}
        {{- if .Values.config.ush_analytics_prefix }}
        - name: USH_ANALYTICS_PREFIX
          value: {{ .Values.config.ush_analytics_prefix | quote }}
        {{- end }}
        {{- if .Values.config.multisite.enabled }}
        - name: MULTISITE_DOMAIN
          value: {{ .Values.config.multisite.api_domain | quote }}
        - name: MULTISITE_CLIENT_DOMAIN
          value: {{ .Values.config.multisite.domain | quote }}
        - name: MULTISITE_EMAIL
          value: {{ .Values.config.multisite.email | quote }}
        {{- end }}

        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        name: api
        {{- if or (.Values.config.dotenv) (.Values.config.dotenv_secret) (.Values.config.passport_keys_secret) }}
        volumeMounts:
        {{- if .Values.config.dotenv }}
        - name: config-dotenv-file
          mountPath: /var/www/.cfg/dotenv
        {{- end }}
        {{- if .Values.config.dotenv_secret }}
        - name: dotenv-secret
          mountPath: /var/www/.cfg/dotenv
        {{- end }}
        {{- if .Values.config.passport_keys_secret }}
        - name: passport-keys
          mountPath: /var/www/.cfg/passport
        {{- end }}
        {{- end }}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: {{ .Values.api.limits.cpu }}
            memory: {{ .Values.api.limits.memory }}
          requests:
            cpu: {{ .Values.api.requests.cpu }}
            memory: {{ .Values.api.requests.memory }}
      {{- if or (.Values.config.dotenv) (.Values.config.dotenv_secret) (.Values.config.passport_keys_secret) }}
      volumes:
      {{- if .Values.config.dotenv  }}
      - name: config-dotenv-file
        configMap:
          name: dotenv
      {{- end }}
      {{- if .Values.config.dotenv_secret  }}
      - name: dotenv-secret
        secret:
          secretName: {{ .Values.config.dotenv_secret.name }}
          items:
          - key: {{ .Values.config.dotenv_secret.key }}
            path: .env
          defaultMode: 0600
      {{- end }}
      {{- if .Values.config.passport_keys_secret }}
      - name: passport-keys
        secret:
          secretName: {{ .Values.config.passport_keys_secret }}
          defaultMode: 0600
      {{- end }}
      {{- end }}
      terminationGracePeriodSeconds: 15

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: platform
    service: api
  name: api
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: platform
    service: api
  type: ClusterIP

# Worker deployment (artisan queue)
---
apiVersion: apps/v1
kind: Deployment
metadata:
{{- if hasKey .Values.worker "deployment" }}
{{- if .Values.worker.deployment.annotations }}
  annotations:
{{ toYaml .Values.worker.deployment.annotations | indent 4 }}
{{- else }}
  annotations: {}
{{- end }}
{{- end }}
  labels:
    app: platform
    service: worker
  name: worker

spec:
  minReadySeconds: {{ .Values.minReadySeconds }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
  replicas: {{ .Values.worker.replicas }}
  selector:
    matchLabels:
      app: platform
      service: worker
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: platform
        service: worker
    spec:
      containers:
      - command:
        - /bin/bash
        - /entrypoint.CES.sh
        - start
        env:
        - name: APP_ENV
          value: {{ .Values.config.appenv | quote }}
        - name: APP_KEY
          {{- if .Values.config.appkey }}
          value: {{ .Values.config.appkey | quote }}
          {{ else if .Values.config.appkey_secret }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.appkey_secret.name }}
              key: {{ .Values.config.appkey_secret.key }}
          {{ else }}
          value: {{ randAlphaNum 32 | quote }}
          {{- end }}
        - name: APP_DEBUG
          value: {{ .Values.api.debug | quote }}
        - name: APP_TIMEZONE
          value: {{ .Values.config.timezone }}
        - name: DB_CONNECTION
          value: mysql
        - name: DB_HOST
          value: {{ .Values.config.db.host }}
        - name: DB_PORT
          value: {{ .Values.config.db.port | quote }}
        - name: DB_DATABASE
          value: {{ .Values.config.db.database }}
        - name: DB_USERNAME
          value: {{ .Values.config.db.username }}
        - name: DB_PASSWORD
          {{- if .Values.config.db.password_secret }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.db.password_secret.name }}
              key: {{ .Values.config.db.password_secret.key }}
          {{- else }}
          value: {{ .Values.config.db.password | quote }}
          {{- end }}
        - name: HDX_URL
          value: {{ .Values.config.hdx_url | quote }}
        - name: MAIL_ADDRESS
          value: {{ .Values.config.mail_from.address | quote }}
        - name: MAIL_NAME
          value: {{ .Values.config.mail_from.name | quote }}
        {{- if .Values.config.smtp_mail }}
        - name: MAIL_DRIVER
          value: smtp
        - name: MAIL_HOST
          value: {{ .Values.config.smtp_mail.host | quote }}
        - name: MAIL_PORT
          value: {{ .Values.config.smtp_mail.port | default "587" | quote }}
        - name: MAIL_ENCRYPTION
          value: {{ .Values.config.smtp_mail.encryption | default "tls" | quote }}
        {{- if .Values.config.smtp_mail.username }}
        - name: MAIL_USERNAME
          value: {{ .Values.config.smtp_mail.username | quote }}
        {{- end }}
        {{- if .Values.config.smtp_mail.password }}
        - name: MAIL_PASSWORD
          value: {{ .Values.config.smtp_mail.password | quote }}
        {{- end }}
        {{- if .Values.config.smtp_mail.password_secret }}
        - name: MAIL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.smtp_mail.password_secret.name }}
              key: {{ .Values.config.smtp_mail.password_secret.key }}
        {{- end }}
        {{- end }}
        {{- if .Values.config.mailgun_mail }}
        - name: MAIL_DRIVER
          value: mailgun
        - name: MAILGUN_DOMAIN
          value: {{ .Values.config.mailgun_mail.domain | quote }}
        {{- if .Values.config.mailgun_mail.secret }}
        - name: MAILGUN_SECRET
          value: {{ .Values.config.mailgun_mail.secret | quote }}
        {{- end }}
        {{- if .Values.config.mailgun_mail.secret_ref }}
        - name: MAILGUN_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.mailgun_mail.secret_ref.name }}
              key: {{ .Values.config.mailgun_mail.secret_ref.key }}
        {{- end }}
        {{- end }}
        - name: REDIS_HOST
          value: {{ .Values.config.redis.host }}
        - name: REDIS_PORT
          value: {{ .Values.config.redis.port | quote }}
        - name: MEMCACHED_HOST
          value: {{ .Values.config.memcached.host | quote }}
        - name: MEMCACHED_PORT
          value: {{ .Values.config.memcached.port | quote }}
        - name: CACHE_DRIVER
          value: {{ .Values.config.drivers.cache }}
        - name: QUEUE_DRIVER
          value: {{ .Values.config.drivers.queue }}
        - name: RATELIMITER_CACHE
          value: {{ .Values.config.drivers.ratelimiter_cache }}
        - { name: DOCKERIZE_TIMEOUT, value: 180s }
        - name: DOCKERIZE_WAIT_FOR_mysql
          value: "tcp://{{ .Values.config.db.host }}:{{ .Values.config.db.port }}"
        - name: DOCKERIZE_WAIT_FOR_redis
          value: "tcp://{{ .Values.config.redis.host }}:{{ .Values.config.redis.port }}"
        {{- if .Values.config.shared_secret }}
        - name: PLATFORM_SHARED_SECRET
          value: {{ .Values.config.shared_secret | quote }}
        {{- end }}
        {{- if .Values.config.shared_secret_ref }}
        - name: PLATFORM_SHARED_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.shared_secret_ref.name }}
              key: {{ .Values.config.shared_secret_ref.key }}
        {{- end }}
        {{- if .Values.config.rackspace_filesystem }}
        - name: FILESYSTEM_DRIVER
          value: rackspace
        - name: RS_REGION
          value: {{ .Values.config.rackspace_filesystem.region | quote }}
        - name: RS_CONTAINER
          value: {{ .Values.config.rackspace_filesystem.container | quote }}
        - name: RS_USERNAME
          value: {{ .Values.config.rackspace_filesystem.username | quote }}
        {{- if .Values.config.rackspace_filesystem.apikey }}
        - name: RS_APIKEY
          value: {{ .Values.config.rackspace_filesystem.apikey | quote }}
        {{- end }}
        {{- if .Values.config.rackspace_filesystem.apikey_secret }}
        - name: RS_APIKEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.rackspace_filesystem.apikey_secret.name }}
              key: {{ .Values.config.rackspace_filesystem.apikey_secret.key }}
        {{- end }}
        {{- end }}
        {{- if .Values.config.sentry.dsn }}
        - name: SENTRY_DSN
          value: {{ .Values.config.sentry.dsn | quote }}
        - name: SENTRY_ENVIRONMENT
        {{- if .Values.config.sentry.environment }}
          value: {{ .Values.config.sentry.environment | quote }}
        {{- else }}
          value: {{ .Values.config.appenv | quote }}
        {{- end }}
        {{- end }}
        # {{- if .Values.config.s3_filesystem }}
        # {{- end }}
        - { name: ENABLE_NGINX, value: "false" }
        - { name: ENABLE_PHPFPM, value: "false" }
        - { name: ENABLE_PLATFORM_TASKS, value: "false" }
        - { name: ENABLE_QUEUE_LISTEN, value: "true" }
        {{- if not (.Values.config.multisite.enabled | default false) }}
        - { name: DB_MIGRATIONS_HANDLED, value: "true" }
        {{- else }}
        - { name: DB_MIGRATIONS_HANDLED, value: "false" }
        {{- end }}
        - { name: RUN_PLATFORM_MIGRATIONS, value: "false" }
        {{- if or (.Values.config.dotenv) (.Values.config.dotenv_secret) }}
        - { name: DOTENV_PATH, value: "/var/www/.cfg/dotenv/.env" }
        {{- end }}
        {{- if .Values.config.passport_keys_secret }}
        - { name: PASSPORT_KEYS_PATH, value: "/var/www/.cfg/passport" }
        {{- end }}
        {{- if .Values.config.ush_analytics_prefix }}
        - name: USH_ANALYTICS_PREFIX
          value: {{ .Values.config.ush_analytics_prefix | quote }}
        {{- end }}
        {{- if .Values.config.multisite.enabled }}
        - name: MULTISITE_DOMAIN
          value: {{ .Values.config.multisite.api_domain | quote }}
        - name: MULTISITE_CLIENT_DOMAIN
          value: {{ .Values.config.multisite.domain | quote }}
        - name: MULTISITE_EMAIL
          value: {{ .Values.config.multisite.email | quote }}
        {{- end }}

        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        name: worker
        {{- if or (.Values.config.dotenv) (.Values.config.passport_keys_secret) }}
        volumeMounts:
        {{- if .Values.config.dotenv }}
        - name: config-dotenv-file
          mountPath: /var/www/.cfg/dotenv
        {{- end }}
        {{- if .Values.config.dotenv_secret }}
        - name: dotenv-secret
          mountPath: /var/www/.cfg/dotenv
        {{- end }}
        {{- if .Values.config.passport_keys_secret }}
        - name: passport-keys
          mountPath: /var/www/.cfg/passport
        {{- end }}
        {{- end }}
        resources:
          limits:
            cpu: {{ .Values.worker.limits.cpu }}
            memory: {{ .Values.worker.limits.memory }}
          requests:
            cpu: {{ .Values.worker.requests.cpu }}
            memory: {{ .Values.worker.requests.memory }}
      {{- if or (.Values.config.dotenv) (.Values.config.dotenv_secret) (.Values.config.passport_keys_secret) }}
      volumes:
      {{- if .Values.config.dotenv  }}
      - name: config-dotenv-file
        configMap:
          name: dotenv
      {{- end }}
      {{- if .Values.config.dotenv_secret  }}
      - name: dotenv-secret
        secret:
          secretName: {{ .Values.config.dotenv_secret.name }}
          items:
          - key: {{ .Values.config.dotenv_secret.key }}
            path: .env
          defaultMode: 0600
      {{- end }}
      {{- if .Values.config.passport_keys_secret }}
      - name: passport-keys
        secret:
          secretName: {{ .Values.config.passport_keys_secret }}
          defaultMode: 0600
      {{- end }}
      {{- end }}
      terminationGracePeriodSeconds: 15

# crond deployment (re-ocurring jobs)
# disabled for multi-site
{{- if not (.Values.config.multisite.enabled | default false) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
{{- if hasKey .Values.crond "deployment" }}
{{- if .Values.crond.deployment.annotations }}
  annotations:
{{ toYaml .Values.crond.deployment.annotations | indent 4 }}
{{- else }}
  annotations: {}
{{- end }}
{{- end }}
  labels:
    app: platform
    service: crond
  name: crond

spec:
  minReadySeconds: {{ .Values.minReadySeconds }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
  replicas: 1
  selector:
    matchLabels:
      app: platform
      service: crond
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: platform
        service: crond
    spec:
      containers:
      - command:
        - /bin/bash
        - /entrypoint.CES.sh
        - start
        env:
        - name: APP_ENV
          value: {{ .Values.config.appenv | quote }}
        - name: APP_KEY
          {{- if .Values.config.appkey }}
          value: {{ .Values.config.appkey | quote }}
          {{ else if .Values.config.appkey_secret }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.appkey_secret.name }}
              key: {{ .Values.config.appkey_secret.key }}
          {{ else }}
          value: {{ randAlphaNum 32 | quote }}
          {{- end }}
        - name: APP_DEBUG
          value: {{ .Values.api.debug | quote }}
        - name: APP_TIMEZONE
          value: {{ .Values.config.timezone }}
        - name: DB_CONNECTION
          value: mysql
        - name: DB_HOST
          value: {{ .Values.config.db.host }}
        - name: DB_PORT
          value: {{ .Values.config.db.port | quote }}
        - name: DB_DATABASE
          value: {{ .Values.config.db.database }}
        - name: DB_USERNAME
          value: {{ .Values.config.db.username }}
        - name: DB_PASSWORD
          {{- if .Values.config.db.password_secret }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.db.password_secret.name }}
              key: {{ .Values.config.db.password_secret.key }}
          {{- else }}
          value: {{ .Values.config.db.password | quote }}
          {{- end }}
        - name: HDX_URL
          value: {{ .Values.config.hdx_url | quote }}
        - name: MAIL_ADDRESS
          value: {{ .Values.config.mail_from.address | quote }}
        - name: MAIL_NAME
          value: {{ .Values.config.mail_from.name | quote }}
        {{- if .Values.config.smtp_mail }}
        - name: MAIL_DRIVER
          value: smtp
        - name: MAIL_HOST
          value: {{ .Values.config.smtp_mail.host | quote }}
        - name: MAIL_PORT
          value: {{ .Values.config.smtp_mail.port | default "587" | quote }}
        - name: MAIL_ENCRYPTION
          value: {{ .Values.config.smtp_mail.encryption | default "tls" | quote }}
        {{- if .Values.config.smtp_mail.username }}
        - name: MAIL_USERNAME
          value: {{ .Values.config.smtp_mail.username | quote }}
        {{- end }}
        {{- if .Values.config.smtp_mail.password }}
        - name: MAIL_PASSWORD
          value: {{ .Values.config.smtp_mail.password | quote }}
        {{- end }}
        {{- if .Values.config.smtp_mail.password_secret }}
        - name: MAIL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.smtp_mail.password_secret.name }}
              key: {{ .Values.config.smtp_mail.password_secret.key }}
        {{- end }}
        {{- end }}
        {{- if .Values.config.mailgun_mail }}
        - name: MAIL_DRIVER
          value: mailgun
        - name: MAILGUN_DOMAIN
          value: {{ .Values.config.mailgun_mail.domain | quote }}
        {{- if .Values.config.mailgun_mail.secret }}
        - name: MAILGUN_SECRET
          value: {{ .Values.config.mailgun_mail.secret | quote }}
        {{- end }}
        {{- if .Values.config.mailgun_mail.secret_ref }}
        - name: MAILGUN_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.mailgun_mail.secret_ref.name }}
              key: {{ .Values.config.mailgun_mail.secret_ref.key }}
        {{- end }}
        {{- end }}
        - name: REDIS_HOST
          value: {{ .Values.config.redis.host }}
        - name: REDIS_PORT
          value: {{ .Values.config.redis.port | quote }}
        - name: MEMCACHED_HOST
          value: {{ .Values.config.memcached.host | quote }}
        - name: MEMCACHED_PORT
          value: {{ .Values.config.memcached.port | quote }}
        - name: CACHE_DRIVER
          value: {{ .Values.config.drivers.cache }}
        - name: QUEUE_DRIVER
          value: {{ .Values.config.drivers.queue }}
        - name: RATELIMITER_CACHE
          value: {{ .Values.config.drivers.ratelimiter_cache }}
        - { name: DOCKERIZE_TIMEOUT, value: 180s }
        - name: DOCKERIZE_WAIT_FOR_mysql
          value: "tcp://{{ .Values.config.db.host }}:{{ .Values.config.db.port }}"
        - name: DOCKERIZE_WAIT_FOR_redis
          value: "tcp://{{ .Values.config.redis.host }}:{{ .Values.config.redis.port }}"
        {{- if .Values.config.shared_secret }}
        - name: PLATFORM_SHARED_SECRET
          value: {{ .Values.config.shared_secret | quote }}
        {{- end }}
        {{- if .Values.config.shared_secret_ref }}
        - name: PLATFORM_SHARED_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.shared_secret_ref.name }}
              key: {{ .Values.config.shared_secret_ref.key }}
        {{- end }}
        {{- if .Values.config.rackspace_filesystem }}
        - name: FILESYSTEM_DRIVER
          value: rackspace
        - name: RS_REGION
          value: {{ .Values.config.rackspace_filesystem.region | quote }}
        - name: RS_CONTAINER
          value: {{ .Values.config.rackspace_filesystem.container | quote }}
        - name: RS_USERNAME
          value: {{ .Values.config.rackspace_filesystem.username | quote }}
        {{- if .Values.config.rackspace_filesystem.apikey }}
        - name: RS_APIKEY
          value: {{ .Values.config.rackspace_filesystem.apikey | quote }}
        {{- end }}
        {{- if .Values.config.rackspace_filesystem.apikey_secret }}
        - name: RS_APIKEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.config.rackspace_filesystem.apikey_secret.name }}
              key: {{ .Values.config.rackspace_filesystem.apikey_secret.key }}
        {{- end }}
        {{- end }}
        {{- if .Values.config.sentry.dsn }}
        - name: SENTRY_DSN
          value: {{ .Values.config.sentry.dsn | quote }}
        - name: SENTRY_ENVIRONMENT
        {{- if .Values.config.sentry.environment }}
          value: {{ .Values.config.sentry.environment | quote }}
        {{- else }}
          value: {{ .Values.config.appenv | quote }}
        {{- end }}
        {{- end }}
        # {{- if .Values.config.s3_filesystem }}
        # {{- end }}
        - { name: ENABLE_NGINX, value: "false" }
        - { name: ENABLE_PHPFPM, value: "false" }
        - { name: ENABLE_PLATFORM_TASKS, value: "true" }
        - { name: ENABLE_QUEUE_LISTEN, value: "false" }
        - { name: RUN_PLATFORM_MIGRATIONS, value: "false" }
        {{- if or (.Values.config.dotenv) (.Values.config.dotenv_secret) }}
        - { name: DOTENV_PATH, value: "/var/www/.cfg/dotenv/.env" }
        {{- end }}
        {{- if .Values.config.passport_keys_secret }}
        - { name: PASSPORT_KEYS_PATH, value: "/var/www/.cfg/passport" }
        {{- end }}
        {{- if .Values.config.ush_analytics_prefix }}
        - name: USH_ANALYTICS_PREFIX
          value: {{ .Values.config.ush_analytics_prefix | quote }}
        {{- end }}

        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        name: worker
        {{- if or (.Values.config.dotenv) (.Values.config.passport_keys_secret) }}
        volumeMounts:
        {{- if .Values.config.dotenv }}
        - name: config-dotenv-file
          mountPath: /var/www/.cfg/dotenv
        {{- end }}
        {{- if .Values.config.dotenv_secret }}
        - name: dotenv-secret
          mountPath: /var/www/.cfg/dotenv
        {{- end }}
        {{- if .Values.config.passport_keys_secret }}
        - name: passport-keys
          mountPath: /var/www/.cfg/passport
        {{- end }}
        {{- end }}
        resources:
          limits:
            cpu: {{ .Values.crond.limits.cpu }}
            memory: {{ .Values.crond.limits.memory }}
          requests:
            cpu: {{ .Values.crond.requests.cpu }}
            memory: {{ .Values.crond.requests.memory }}
      {{- if or (.Values.config.dotenv) (.Values.config.dotenv_secret) (.Values.config.passport_keys_secret) }}
      volumes:
      {{- if .Values.config.dotenv  }}
      - name: config-dotenv-file
        configMap:
          name: dotenv
      {{- end }}
      {{- if .Values.config.dotenv_secret  }}
      - name: dotenv-secret
        secret:
          secretName: {{ .Values.config.dotenv_secret.name }}
          items:
          - key: {{ .Values.config.dotenv_secret.key }}
            path: .env
          defaultMode: 0600
      {{- end }}
      {{- if .Values.config.passport_keys_secret }}
      - name: passport-keys
        secret:
          secretName: {{ .Values.config.passport_keys_secret }}
          defaultMode: 0600
      {{- end }}
      {{- end }}
      terminationGracePeriodSeconds: 15
{{- end }}

{{- if .Values.api.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
{{- if .Values.api.ingress.annotations }}
  annotations:
{{ toYaml .Values.api.ingress.annotations | indent 4 }}
{{- else }}
  annotations: {}
{{- end }}
  name: api
spec:
  rules:
  - host: {{ .Values.api.ingress.host | quote }}
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: api
            port:
              name: http
{{- if .Values.api.ingress.aliases -}}
{{- range .Values.api.ingress.aliases }}
  - host: {{ . | quote }}
    http:
      paths:
      - path: /
        backend:
          service:
            name: client
            port: 
              name: http
{{- end -}}
{{- end -}}

{{- if .Values.api.ingress.tls }}
  tls:
{{ toYaml .Values.api.ingress.tls | indent 4 }}
{{- end -}}
{{- end }}